@model IEnumerable<Chatter.Models.Chat>



@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<input type="text" id="postAdd" placeholder="Enter Chats">
<button class="postChats">Post</button>

<div id="response"></div>
<button id="getChats" class="btn btn-primary">Get Chats</button>

@section Scripts {
    <script>
        //AJAX request using jQuery as a helper
        //AJAX request using jQuery as a helper
        //Notice this combines Razor syntax (@Url.Action()) in order to
        //have the compiler figure out the exact path of the controller,
        //alongside of jQuery.


        $(document).ready(function () {

            //post chats
            $("#postChats").click(function () {
                var postMessage = $('#postAdd').val();
                $.post("@Url.Action("PostChats", "Chats")", {"Message": postMessage})
            });

            //initialization code here
            $("#getChats").click(pullChats);


            function pullChats () {
                $.get("@Url.Action("TestJson","Chats")", function (serverResponse) {
                    var jsonTest = JSON.parse(serverResponse);
                    //console.log(jsonTest);

                    var ul = $("<ul>", { id: "messageList", "class": "bg-primary" });
                    //ul.click(function () { alert("ul was clicked!"); });
                    $("#response").append(ul);

                    $.each(jsonTest, function (inx, val) {
                        var myBgClass = ["bg-info", "bg-success"];
                        var li = $("<li>", { id: "li" + inx, "class": myBgClass[inx % 2] });
                        li.text(val.Message + " Posted By: " + val.UserName);
                        //li.click(function () { alert("my index is " + inx); });
                        ul.append(li);
                    });
                })


            }

        }
        );



    </script>
}
        
 
      <!-- <h2>My Chats</h2>
 
       <div class="addChat">
           Html.ActionLink("Post a New Chat", "Create")
       </div>
 
       <textarea id="textbox" rows="4" cols="50">
            Post your chat here...
       </textarea>
       <br/>
        USE JQUERY .POST ON BUTTON TO CONNECT MESSAGE TO CONTROLLER. W3 schools has the best method. See Slack message from Russ 
 
       <button id="postChats" class="btn btn-primary">Post</button>
 
 
 
       <div id="response"></div>
       <button id="getChats" class="btn btn-primary">Update Chats</button>
 
 
       section Scripts{
       <script>
            $(document).ready(function () {
 
                $("#getChats").click(myFunction);
 
                       function myFunction(){
                           $.get("Url.Action("TestJson","Chats")", function (serverResponse) {
                               var jsonTest = JSON.parse(serverResponse);
                               // console.log(jsonTest);
 
                               var ul = $("<ul>", { id: "messageList", "class": "bg-primary" });
                               ul.click(function () { alert("ul was clicked!"); });
                               $("#response").append(ul);
 
                               $.each(jsonTest, function (inx, val) {
                                   var myBgClass = ["bg-info","bg-warning"];
                                   var li = $("<li>", { id: "li" + inx, "class": myBgClass[inx % 2] });
                                   li.text(val.Message + "Posted by" + val.UserId);
                                   li.click(function () { alert("my index is " + inx); });
                                   ul.append(li);
       });
       })
       }
 
  
                $("PostChats").click();
 
       });

    </script>
} -->


